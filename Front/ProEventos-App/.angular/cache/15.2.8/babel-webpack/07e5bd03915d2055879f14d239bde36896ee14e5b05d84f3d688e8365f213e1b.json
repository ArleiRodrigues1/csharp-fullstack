{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EventsListComponent = class EventsListComponent {\n  constructor(eventService, modalService, toastr, spinner, router) {\n    this.eventService = eventService;\n    this.modalService = modalService;\n    this.toastr = toastr;\n    this.spinner = spinner;\n    this.router = router;\n    this.events = [];\n    this.eventsFilter = [];\n    this.displayImg = true;\n  }\n  ngOnInit() {\n    // this.spinner.show();\n    this.getEventos;\n  }\n  getEventos() {\n    this.eventService.getEventos().subscribe({\n      next: events => {\n        this.events = events;\n        this.eventsFilter = this.events;\n      },\n      error: () => {\n        // this.spinner.hide();\n        this.toastr.error('Erro ao Carregar os Eventos', 'Erro!');\n      },\n      complete: () => this.spinner.hide()\n    });\n  }\n  openModal(template) {\n    this.modalRef = this.modalService.show(template, {\n      class: 'modal-sm'\n    });\n  }\n  confirm() {\n    this.modalRef.hide();\n    this.toastr.success('O evento foi deletado com sucesso.', 'Deletado');\n  }\n  decline() {\n    this.modalRef.hide();\n  }\n  eventsDetails(id) {\n    this.router.navigate([`eventos/detalhe/${id}`]);\n  }\n};\nEventsListComponent = __decorate([Component({\n  selector: 'app-event-list',\n  styleUrls: ['./event-list.component.scss']\n})], EventsListComponent);\nexport { EventsListComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAA6B,eAAe;AAevD,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAQ9BC,YACUC,YAA0B,EAC1BC,YAA4B,EAC5BC,MAAqB,EACrBC,OAA0B,EAC1BC,MAAc;IAJd,iBAAY,GAAZJ,YAAY;IACZ,iBAAY,GAAZC,YAAY;IACZ,WAAM,GAANC,MAAM;IACN,YAAO,GAAPC,OAAO;IACP,WAAM,GAANC,MAAM;IAVT,WAAM,GAAY,EAAE;IACpB,iBAAY,GAAY,EAAE;IACjC,eAAU,GAAG,IAAI;EASb;EAEJC,QAAQ;IACN;IACA,IAAI,CAACC,UAAU;EACjB;EAEOA,UAAU;IACf,IAAI,CAACN,YAAY,CAACM,UAAU,EAAE,CAACC,SAAS,CAAC;MACvCC,IAAI,EAAGC,MAAe,IAAI;QACxB,IAAI,CAACA,MAAM,GAAGA,MAAM;QACpB,IAAI,CAACC,YAAY,GAAG,IAAI,CAACD,MAAM;MACjC,CAAC;MACDE,KAAK,EAAE,MAAK;QACV;QACA,IAAI,CAACT,MAAM,CAACS,KAAK,CAAC,6BAA6B,EAAE,OAAO,CAAC;MAC3D,CAAC;MACDC,QAAQ,EAAE,MAAM,IAAI,CAACT,OAAO,CAACU,IAAI;KAClC,CAAC;EACJ;EAEAC,SAAS,CAACC,QAA0B;IAClC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACf,YAAY,CAACgB,IAAI,CAACF,QAAQ,EAAE;MAACG,KAAK,EAAE;IAAU,CAAC,CAAC;EACvE;EAEAC,OAAO;IACL,IAAI,CAACH,QAAQ,CAACH,IAAI,EAAE;IACpB,IAAI,CAACX,MAAM,CAACkB,OAAO,CAAC,oCAAoC,EAAE,UAAU,CAAC;EACvE;EAEAC,OAAO;IACL,IAAI,CAACL,QAAQ,CAACH,IAAI,EAAE;EACtB;EAEAS,aAAa,CAACC,EAAU;IACtB,IAAI,CAACnB,MAAM,CAACoB,QAAQ,CAAC,CAAC,mBAAmBD,EAAE,EAAE,CAAC,CAAC;EACjD;CACD;AAnDYzB,mBAAmB,eAJ/BD,SAAS,CAAC;EACT4B,QAAQ,EAAE,gBAAgB;EAC1BC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACW5B,mBAAmB,CAmD/B;SAnDYA,mBAAmB","names":["Component","EventsListComponent","constructor","eventService","modalService","toastr","spinner","router","ngOnInit","getEventos","subscribe","next","events","eventsFilter","error","complete","hide","openModal","template","modalRef","show","class","confirm","success","decline","eventsDetails","id","navigate","selector","styleUrls"],"sourceRoot":"","sources":["E:\\ProEventos\\csharp-fullstack\\Front\\ProEventos-App\\src\\app\\components\\events\\events-list\\events-list.component.ts"],"sourcesContent":["import { Router } from '@angular/router';\nimport { Component, OnInit, TemplateRef } from '@angular/core';\n\n\nimport { ToastrService } from 'ngx-toastr';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\n\nimport { Event } from '../../../models/Event';\n\nimport { EventService } from '@app/services/event.service';\n\n@Component({\n  selector: 'app-event-list',\n  styleUrls: ['./event-list.component.scss']\n})\nexport class EventsListComponent implements OnInit {\n\n  modalRef: BsModalRef;\n  public events: Event[] = [];\n  public eventsFilter: Event[] = [];\n  displayImg = true;\n\n\n  constructor(\n    private eventService: EventService,\n    private modalService: BsModalService,\n    private toastr: ToastrService,\n    private spinner: NgxSpinnerService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    // this.spinner.show();\n    this.getEventos;\n  }\n\n  public getEventos(): void {\n    this.eventService.getEventos().subscribe({\n      next: (events: Event[]) => {\n        this.events = events;\n        this.eventsFilter = this.events;\n      },\n      error: () => {\n        // this.spinner.hide();\n        this.toastr.error('Erro ao Carregar os Eventos', 'Erro!');\n      },\n      complete: () => this.spinner.hide()\n    });\n  }\n\n  openModal(template: TemplateRef<any>): void {\n    this.modalRef = this.modalService.show(template, {class: 'modal-sm'});\n  }\n\n  confirm(): void{\n    this.modalRef.hide();\n    this.toastr.success('O evento foi deletado com sucesso.', 'Deletado');\n  }\n\n  decline(): void{\n    this.modalRef.hide();\n  }\n\n  eventsDetails(id: number): void{\n    this.router.navigate([`eventos/detalhe/${id}`]);\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}